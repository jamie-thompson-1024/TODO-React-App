{"version":3,"sources":["Model/Todo.ts","reportWebVitals.ts","Model/Settings.ts","Model/Item.ts","Model/Change.ts","Model/ItemCollection.ts","Model/Storage.ts","Components/TodoContext.ts","Components/ItemViewer/SearchBar.tsx","Components/ItemViewer/Item.tsx","Components/ItemViewer/ItemList.tsx","Components/ItemViewer/ItemViewer.tsx","Components/ItemForm/ItemForm.tsx","Components/Header/Settings.tsx","Components/Header/Header.tsx","Components/App.tsx","index.tsx"],"names":["ValidationMessage","ChangeAction","SortOrder","Theme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","allowedChars","availableThemes","LIGHT","DARK","Settings","theme","this","themeChangeEvent","dispatchEvent","CustomEvent","detail","obj","settings","EventTarget","Item","ID","name","desc","tags","description","creationTime","Date","now","lastModifiedTime","completed","newItem","Object","assign","map","tag","newName","msg","checkStringInput","OK","newDesc","newState","newTag","includes","ALREADY_EXISTS","push","oldTag","trim","EMPTY","some","char","INVALID_CHAR","doesntExistFlag","filter","DOESNT_EXIST","item","e","input","Change","action","data","time","oldValue","newValue","toJson","change","fromJson","ItemCollection","items","selected","changes","undoneChanges","lastID","searchItems","order","ASC_DATE_ADDED","find","selectEvent","f_item","REMOVE_ITEM","clone","changeEvent","errorList","forEach","i","createID","ADD_ITEM","selectItem","tagAdded","pop","ADD_TAG","getItem","removeTag","REMOVE_TAG","addTag","SET_DESC","SET_NAME","SET_STATE","console","log","undefined","sort","a","b","ASC_DATE_MODIFIED","ASC_NAME","toUpperCase","DSC_DATE_ADDED","DSC_DATE_MODIFIED","DSC_NAME","searchEvent","old","setName","ITEM_NOT_SELECTED","setDesc","setState","setSearchParams","itemCol","TodoStorage","itemCollection","load","addEventListener","save","localObject","localObjectString","localStorage","JSON","parse","loadEvent","stringify","saveEvent","removeItem","wipeEvent","Event","TodoContext","React","createContext","SearchBar","EditMode","useContext","searchSvgLogoPath","useCallback","toString","useState","searchSvgLogo","setSearchSvgLogo","updateTheme","searchRef","useRef","orderRef","search","current","value","undoChange","undo","redoChange","redo","useEffect","removeEventListener","className","onClick","src","alt","type","ref","htmlFor","id","props","expand","setExpand","NONE","editMode","setEditMode","editSvgLogoPath","editSvgLogo","setEditSvgLogo","tagsRef","nameRef","descRef","TITLE","DESC","TAGS","deleteThis","selectResponse","toggleThisState","ev","state","stopPropagation","toggleThisSelect","stopPropigation","tagRefc","nameRefc","descRefc","onchange","defaultValue","ItemList","getSearchItems","setItems","updateItems","ItemViewer","ItemForm","setTags","index","splice","submitItem","createItem","storage","showMenu","setShowMenu","cogSvgLogoPath","cogSvgLogo","setCogSvgLogo","toggleMenu","toggleTheme","setTheme","wipeData","wipe","Header","notesSvgLogoPath","notesSvgLogo","setNotesSvgLogo","App","todoStore","window","location","reload","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"+TAuEKA,EAKAC,EAOAC,EAOAC,E,iCC5EUC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0CDNRQ,EAAe,CACjB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7H,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7H,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,O,SAgE7Bb,O,WAAAA,I,iBAAAA,I,+BAAAA,I,+BAAAA,I,mCAAAA,I,0CAAAA,M,cAKAC,O,6BAAAA,I,uBAAAA,I,uBAAAA,I,uBAAAA,I,yBAAAA,I,qBAAAA,I,4BAAAA,M,cAOAC,K,mBAAAA,E,mBAAAA,E,4BAAAA,E,4BAAAA,E,gCAAAA,E,iCAAAA,M,cAOAC,K,cAAAA,E,aAAAA,M,KAML,IAAMW,EAAkB,CACpBX,EAAMY,MACNZ,EAAMa,MEnDKC,E,kDAzCX,aACC,IAAD,8BACI,gBAJJC,WAGA,EAGI,EAAKA,MAAQf,EAAMa,KAHvB,E,4CAMA,SAASE,GAELC,KAAKD,MAAQA,EACbC,KAAKC,qB,uBAGT,WAEI,OAAON,I,8BAGX,WAEIK,KAAKE,cACD,IAAIC,YAA4B,cAAe,CAAEC,OAAQ,CAACL,MAAOC,KAAKD,Y,oBAY9E,WAEI,MAAO,CACHA,MAAOC,KAAKD,U,uBAXpB,SAAgBM,GAEZ,IAAIC,EAAW,IAAIR,EAGnB,OAFGO,IACCC,EAASP,MAAQM,EAAIN,OAClBO,M,eAlCQC,c,QCwIRC,E,WA1HX,WAAYC,EAAYC,EAAcC,EAAcC,GACnD,yBATDH,QASA,OARAC,UAQA,OAPAG,iBAOA,OANAC,aAAuBC,KAAKC,MAM5B,KALAC,iBAA2BF,KAAKC,MAKhC,KAJAE,WAAqB,EAIrB,KAHAN,UAGA,EACIZ,KAAKS,GAAKA,EACVT,KAAKU,KAAOA,EACZV,KAAKa,YAAcF,EACnBX,KAAKY,KAAOA,E,yCAqBhB,WAEI,IAAIO,EAAU,IAAIX,EAAK,EAAG,GAAI,GAAI,IAGlC,OAFAY,OAAOC,OAAOF,EAASnB,MACvBmB,EAAQP,KAAOZ,KAAKY,KAAKU,KAAI,SAACC,GAAD,OAASA,KAC/BJ,I,oBAGX,WAEI,MAAO,CACHV,GAAIT,KAAKS,GACTC,KAAMV,KAAKU,KACXG,YAAab,KAAKa,YAClBC,aAAcd,KAAKc,aACnBG,iBAAkBjB,KAAKiB,iBACvBC,UAAWlB,KAAKkB,UAChBN,KAAMZ,KAAKY,Q,qBAInB,SAAQY,GAEJ,IAAIC,EAAMjB,EAAKkB,iBAAiBF,GAChC,OAAGC,IAAQ5C,EAAkB8C,GAClBF,GAEXzB,KAAKU,KAAOc,EACZxB,KAAKiB,iBAAmBF,KAAKC,MACtBnC,EAAkB8C,M,qBAG7B,SAAQC,GAEJ,IAAIH,EAAMjB,EAAKkB,iBAAiBE,GAChC,OAAGH,IAAQ5C,EAAkB8C,GAClBF,GAEXzB,KAAKa,YAAce,EACnB5B,KAAKiB,iBAAmBF,KAAKC,MACtBnC,EAAkB8C,M,sBAG7B,SAASE,GAIL,OAFA7B,KAAKkB,UAAYW,EACjB7B,KAAKiB,iBAAmBF,KAAKC,MACtBnC,EAAkB8C,K,oBAG7B,SAAOG,GAEH,IAAIL,EAAMjB,EAAKkB,iBAAiBI,GAChC,OAAGL,IAAQ5C,EAAkB8C,GAClBF,EAERzB,KAAKY,KAAKmB,SAASD,GACXjD,EAAkBmD,gBAE7BhC,KAAKY,KAAKqB,KAAKH,GACf9B,KAAKiB,iBAAmBF,KAAKC,MACtBnC,EAAkB8C,M,uBAG7B,SAAUO,GAEN,GAAqB,KAAlBA,EAAOC,OACN,OAAOtD,EAAkBuD,MAC7B,GAAG,YAAIF,GAAQG,MAAK,SAACC,GAAW,OAAQ5C,EAAaqC,SAASO,MAC1D,OAAOzD,EAAkB0D,aAE7B,IAAIC,GAAkB,EAMtB,OALAxC,KAAKY,KAAOZ,KAAKY,KAAK6B,QAAO,SAAClB,GAG1B,OAFGA,IAAQW,IACPM,GAAkB,GACfjB,IAAQW,KAEhBM,EACQ3D,EAAkB6D,cAE7B1C,KAAKiB,iBAAmBF,KAAKC,MACtBnC,EAAkB8C,O,uBAnG7B,SAAgBtB,GAEZ,GAAIA,EAAJ,CAGA,IAAIsC,EAAO,IAAInC,EACXH,EAAII,GACJJ,EAAIK,KACJL,EAAIQ,YACJR,EAAIO,KAAKU,KAAI,SAACsB,GAAD,OAAOA,MAMxB,OAJAD,EAAK7B,aAAeT,EAAIS,aACxB6B,EAAK1B,iBAAmBZ,EAAIY,iBAC5B0B,EAAKzB,UAAYb,EAAIa,UAEdyB,K,8BAuFX,SAAwBE,GAEpB,MAAoB,KAAjBA,EAAMV,OACEtD,EAAkBuD,MAC1B,YAAIS,GAAOR,MAAK,SAACC,GAAW,OAAQ5C,EAAaqC,SAASO,MAClDzD,EAAkB0D,aAEtB1D,EAAkB8C,O,KCzFlBmB,E,WAlCX,WAAYC,EAAsBC,GACjC,yBANDC,UAMA,OALAF,YAKA,OAJAG,cAIA,OAHAC,cAGA,EACInD,KAAKiD,KAAOlC,KAAKC,MACjBhB,KAAK+C,OAASA,EACd/C,KAAKkD,SAAWF,EAAKE,SACrBlD,KAAKmD,SAAWH,EAAKG,S,0CAkBzB,WACC,IAAD,IACI,MAAO,CACHF,KAAMjD,KAAKiD,KACXF,OAAQ/C,KAAK+C,OACbG,SAAQ,UAAElD,KAAKkD,gBAAP,aAAE,EAAeE,SACzBD,SAAQ,UAAEnD,KAAKmD,gBAAP,aAAE,EAAeC,a,uBArBjC,SAAgB/C,GAEZ,GAAIA,EAAJ,CAGA,IAAIgD,EAAS,IAAIP,EACbzC,EAAI0C,OACJ,CACIG,SAAU1C,EAAK8C,SAASjD,EAAI6C,UAC5BC,SAAU3C,EAAK8C,SAASjD,EAAI8C,YAGpC,OADAE,EAAOJ,KAAO5C,EAAI4C,KACXI,O,KC1BTE,E,4MAEFC,MAAqB,G,EACrBC,UAAoB,E,EACpBC,QAAyB,G,EACzBC,cAA+B,G,EAE/BC,OAAiB,E,EAEjBC,YAA2B,G,EAC3BpB,OAAiB,G,EACjBqB,MAAmB/E,EAAUgF,e,4CAkC7B,WAEI,MAAO,CACHP,MAAOxD,KAAKwD,MAAMlC,KAAI,SAACqB,GAAW,OAAOA,EAAKS,YAC9CM,QAAS1D,KAAK0D,QAAQpC,KAAI,SAAC+B,GAAa,OAAOA,EAAOD,YACtDO,cAAe3D,KAAK2D,cAAcrC,KAAI,SAAC+B,GAAa,OAAOA,EAAOD,YAClEQ,OAAQ5D,KAAK4D,U,wBAIrB,SAAWnD,GAEP,IAAIkC,EAAO3C,KAAKwD,MAAMQ,MAAK,SAACrB,GAAW,OAAOA,EAAKlC,KAAOA,KAC1D,OAAGkC,GAEC3C,KAAKyD,SAAWhD,EAChBT,KAAKiE,YAAYtB,GACV9D,EAAkB8C,KAG7B3B,KAAKyD,UAAY,EACjBzD,KAAKiE,cACEpF,EAAkB6D,gB,wBAG7B,SAAWjC,GAEHA,IACAA,EAAKT,KAAKyD,UAEd,IAAId,EAAO3C,KAAKwD,MAAMQ,MAAK,SAACrB,GAAW,OAAOA,EAAKlC,KAAOA,KAC1D,GAAGkC,EACH,CACI3C,KAAKwD,MAAQxD,KAAKwD,MAAMf,QAAO,SAACyB,GAAa,OAAOA,IAAWvB,KAE/D,IAAIU,EAAS,IAAIP,EACbhE,EAAaqF,YACb,CAAEjB,SAAUP,EAAKyB,UAIrB,OAFApE,KAAK0D,QAAQzB,KAAKoB,GAClBrD,KAAKqE,YAAYhB,GACVxE,EAAkB8C,GAG7B,OAAO9C,EAAkB6D,e,wBAG7B,SAAWhC,EAAcC,EAAcC,GAEnC,IAAI0D,EAAiC,GAQrC,GANAA,EAAU,GAAK9D,EAAKkB,iBAAiBhB,GACrC4D,EAAU,GAAK9D,EAAKkB,iBAAiBf,GACrCC,EAAK2D,SAAQ,SAAChD,EAAKiD,GACfF,EAAUE,EAAI,GAAKhE,EAAKkB,iBAAiBH,MAG1C+C,EAAUjC,MAAK,SAACZ,GAAU,OAAOA,IAAQ5C,EAAkB8C,MAC1D,OAAO2C,EAEX,IAAI3B,EAAO,IAAInC,EAAMR,KAAKyE,WAAY/D,EAAMC,EAAMC,GAClDZ,KAAKwD,MAAMvB,KAAMU,GAEjB,IAAIU,EAAS,IAAIP,EACbhE,EAAa4F,SACb,CAAEvB,SAAUR,EAAKyB,UAMrB,OAJApE,KAAK0D,QAAQzB,KAAKoB,GAClBrD,KAAKqE,YAAYhB,GACjBrD,KAAK2E,WAAWhC,EAAKlC,IAEd6D,I,kBAGX,SAAKjB,GACJ,IAAD,0DAWQV,EACAiC,EAXJ,IAAIvB,EACJ,CAGI,KAFAA,EAASrD,KAAK0D,QAAQmB,OAGlB,OAAOhG,EAAkB6D,aAE7B1C,KAAK2D,cAAc1B,KAAKoB,GAM5B,OAAOA,EAAON,QAEV,KAAKjE,EAAa4F,SACd1E,KAAKwD,MAAQxD,KAAKwD,MAAMf,QAAO,YAAW,IAAD,MAARhC,EAAQ,EAARA,GAC7B,2BAAO4C,SAAP,iBAAO,EAAQF,gBAAf,aAAO,EAAkB1C,UAAzB,SAAgC,IAAMA,KAE1C,MACJ,KAAK3B,EAAagG,QACdF,EAAQ,UAAGvB,SAAH,iBAAG,EAAQF,gBAAX,aAAG,EAAkBvC,KAAKoD,MAAK,SAACzC,GAAS,IAAD,IAC5C,QAAO,UAAC8B,SAAD,iBAAC,EAAQH,gBAAT,OAAC,EAAkBtC,KAAKmB,SAASR,OAG5CoB,EAAO3C,KAAK+E,QAAL,oBAAa1B,SAAb,iBAAa,EAAQF,gBAArB,aAAa,EAAkB1C,UAA/B,SAAsC,GAE1CmE,GAAYjC,GACXA,EAAKqC,UAAUJ,GAEnB,MACJ,KAAK9F,EAAaqF,aACdxB,EAAI,UAAGU,EAAOH,gBAAV,aAAG,EAAiBkB,UAEpBpE,KAAKwD,MAAMvB,KAAKU,GACpB,MACJ,KAAK7D,EAAamG,WACdL,EAAQ,UAAGvB,SAAH,iBAAG,EAAQH,gBAAX,aAAG,EAAkBtC,KAAKoD,MAAK,SAACzC,GAAS,IAAD,IAC5C,QAAO,UAAC8B,SAAD,iBAAC,EAAQF,gBAAT,OAAC,EAAkBvC,KAAKmB,SAASR,OAG5CoB,EAAO3C,KAAK+E,QAAL,oBAAa1B,SAAb,iBAAa,EAAQF,gBAArB,aAAa,EAAkB1C,UAA/B,SAAsC,GAE1CmE,GAAYjC,GACXA,EAAKuC,OAAON,GAEhB,MACJ,KAAK9F,EAAaqG,UACdxC,EAAO3C,KAAK+E,QAAL,oBAAa1B,SAAb,iBAAa,EAAQF,gBAArB,aAAa,EAAkB1C,UAA/B,SAAsC,MAEzCkC,EAAK9B,YAAL,oBAAmBwC,SAAnB,iBAAmB,EAAQH,gBAA3B,aAAmB,EAAkBrC,mBAArC,QAAoD8B,EAAK9B,aAC7D,MACJ,KAAK/B,EAAasG,UACdzC,EAAO3C,KAAK+E,QAAL,oBAAa1B,SAAb,iBAAa,EAAQF,gBAArB,aAAa,EAAkB1C,UAA/B,SAAsC,MAEzCkC,EAAKjC,KAAL,oBAAY2C,SAAZ,iBAAY,EAAQH,gBAApB,aAAY,EAAkBxC,YAA9B,QAAsCiC,EAAKjC,MAC/C,MACJ,KAAK5B,EAAauG,WACd1C,EAAO3C,KAAK+E,QAAL,oBAAa1B,SAAb,iBAAa,EAAQF,gBAArB,aAAa,EAAkB1C,UAA/B,SAAsC,MAEzCkC,EAAKzB,UAAL,oBAAiBmC,SAAjB,iBAAiB,EAAQH,gBAAzB,aAAiB,EAAkBhC,iBAAnC,QAAgDyB,EAAKzB,WAMjE,OAFAlB,KAAKqE,YAAYhB,GAEVxE,EAAkB8C,K,kBAG7B,SAAK0B,GACJ,IAAD,0DAWQV,EACAiC,EAXJ,IAAIvB,EACJ,CAGI,KAFAA,EAASrD,KAAK2D,cAAckB,OAGxB,OAAOhG,EAAkB6D,aAE7B1C,KAAK0D,QAAQzB,KAAKoB,GAMtB,OAAOA,EAAON,QAEV,KAAKjE,EAAa4F,UACd/B,EAAI,UAAGU,EAAOF,gBAAV,aAAG,EAAiBiB,UAEpBpE,KAAKwD,MAAMvB,KAAKU,GACpB,MACJ,KAAK7D,EAAagG,QACdF,EAAQ,UAAGvB,SAAH,iBAAG,EAAQF,gBAAX,aAAG,EAAkBvC,KAAKoD,MAAK,SAACzC,GAAS,IAAD,IAC5C,QAAO,UAAC8B,SAAD,iBAAC,EAAQH,gBAAT,OAAC,EAAkBtC,KAAKmB,SAASR,OAG5CoB,EAAO3C,KAAK+E,QAAL,oBAAa1B,SAAb,iBAAa,EAAQF,gBAArB,aAAa,EAAkB1C,UAA/B,SAAsC,GAC7C6E,QAAQC,IAAI5C,GAAO2C,QAAQC,IAAIX,GAC5BA,GAAYjC,GACXA,EAAKuC,OAAON,GAEhB,MACJ,KAAK9F,EAAaqF,YACdnE,KAAKwD,MAAQxD,KAAKwD,MAAMf,QAAO,YAAW,IAAD,MAARhC,EAAQ,EAARA,GAC7B,2BAAO4C,SAAP,iBAAO,EAAQH,gBAAf,aAAO,EAAkBzC,UAAzB,SAAgC,IAAMA,KAE1C,MACJ,KAAK3B,EAAamG,WACdL,EAAQ,UAAGvB,SAAH,iBAAG,EAAQH,gBAAX,aAAG,EAAkBtC,KAAKoD,MAAK,SAACzC,GAAS,IAAD,IAC5C,QAAO,UAAC8B,SAAD,iBAAC,EAAQF,gBAAT,OAAC,EAAkBvC,KAAKmB,SAASR,OAG5CoB,EAAO3C,KAAK+E,QAAL,oBAAa1B,SAAb,iBAAa,EAAQF,gBAArB,aAAa,EAAkB1C,UAA/B,SAAsC,GAE1CmE,GAAYjC,GACXA,EAAKqC,UAAUJ,GAEnB,MACJ,KAAK9F,EAAaqG,UACdxC,EAAO3C,KAAK+E,QAAL,oBAAa1B,SAAb,iBAAa,EAAQF,gBAArB,aAAa,EAAkB1C,UAA/B,SAAsC,MAEzCkC,EAAK9B,YAAL,oBAAmBwC,SAAnB,iBAAmB,EAAQF,gBAA3B,aAAmB,EAAkBtC,mBAArC,QAAoD8B,EAAK9B,aAC7D,MACJ,KAAK/B,EAAasG,UACdzC,EAAO3C,KAAK+E,QAAL,oBAAa1B,SAAb,iBAAa,EAAQF,gBAArB,aAAa,EAAkB1C,UAA/B,SAAsC,MAEzCkC,EAAKjC,KAAL,oBAAY2C,SAAZ,iBAAY,EAAQF,gBAApB,aAAY,EAAkBzC,YAA9B,QAAsCiC,EAAKjC,MAC/C,MACJ,KAAK5B,EAAauG,WACd1C,EAAO3C,KAAK+E,QAAL,oBAAa1B,SAAb,iBAAa,EAAQF,gBAArB,aAAa,EAAkB1C,UAA/B,SAAsC,MAEzCkC,EAAKzB,UAAL,oBAAiBmC,SAAjB,iBAAiB,EAAQF,gBAAzB,aAAiB,EAAkBjC,iBAAnC,QAAgDyB,EAAKzB,WAMjE,OAFAlB,KAAKqE,YAAYhB,GAEVxE,EAAkB8C,K,sBAG7B,WAEI,OAAO3B,KAAK4D,W,qBAGhB,SAAQnD,GAEJ,OAAOT,KAAKwD,MAAMQ,MAAK,SAACrB,GACpB,OAAOA,EAAKlC,KAAOA,O,6BAI3B,SAAgBgC,EAAiBqB,GAChC,IAAD,OAqCI,YApCc0B,IAAX/C,IACCzC,KAAKyC,OAASA,QACL+C,IAAV1B,IACC9D,KAAK8D,MAAQA,GAEjB9D,KAAK6D,YAAc7D,KAAKwD,MAAMf,QAAO,SAACE,GAClC,OAAOA,EAAKjC,KAAKqB,SAAS,EAAKU,WAChCgD,MAAK,SAACC,EAASC,GACd,OAAO,EAAK7B,OAER,KAAK/E,EAAUgF,eACX,OAAO2B,EAAE5E,aAAe6E,EAAE7E,aAC9B,KAAK/B,EAAU6G,kBACX,OAAOF,EAAEzE,iBAAmB0E,EAAE1E,iBAClC,KAAKlC,EAAU8G,SACX,OAAGH,EAAEhF,KAAKoF,cAAgBH,EAAEjF,KAAKoF,eACrB,EACTJ,EAAEhF,KAAKoF,cAAgBH,EAAEjF,KAAKoF,cACtB,EACJ,EACX,KAAK/G,EAAUgH,eACX,OAAOJ,EAAE7E,aAAe4E,EAAE5E,aAC9B,KAAK/B,EAAUiH,kBACX,OAAOL,EAAE1E,iBAAmByE,EAAEzE,iBAClC,KAAKlC,EAAUkH,SACX,OAAGP,EAAEhF,KAAKoF,cAAgBH,EAAEjF,KAAKoF,cACtB,EACRJ,EAAEhF,KAAKoF,cAAgBH,EAAEjF,KAAKoF,eACrB,EACL,EACX,QACI,OAAO,MAInB9F,KAAKkG,cACErH,EAAkB8C,K,4BAG7B,WAEI,OAAO3B,KAAK6D,c,cAIhB,WAEI,OAAO7D,KAAKyD,W,gBAGhB,WACC,IAAD,EACI,OAAO,UAAAzD,KAAK+E,QAAQ/E,KAAKyD,iBAAlB,eAA6B/C,OAAQ,K,qBAGhD,WACC,IAAD,EACI,OAAO,UAAAV,KAAK+E,QAAQ/E,KAAKyD,iBAAlB,eAA6BvC,aAAa,I,uBAGrD,WACC,IAAD,EACI,OAAO,UAAAlB,KAAK+E,QAAQ/E,KAAKyD,iBAAlB,eAA6B5C,cAAe,K,wBAGvD,WACC,IAAD,EACI,OAAO,UAAAb,KAAK+E,QAAQ/E,KAAKyD,iBAAlB,eAA6B3C,gBAAiB,I,4BAGzD,WACC,IAAD,EACI,OAAO,UAAAd,KAAK+E,QAAQ/E,KAAKyD,iBAAlB,eAA6BxC,oBAAqB,I,gBAG7D,WACC,IAAD,EACI,OAAO,UAAAjB,KAAK+E,QAAQ/E,KAAKyD,iBAAlB,eAA6B7C,OAAQ,K,qBAGhD,SAAQY,GAEJ,IAAImB,EAAO3C,KAAK+E,QAAQ/E,KAAKyD,UAE7B,GAAGd,EACH,CACI,IAAIwD,EAAMxD,EAAKyB,QACX3C,EAAMkB,EAAKyD,QAAQ5E,GAEnB6B,EAAS,IAAIP,EACbhE,EAAasG,SACb,CAAElC,SAAUiD,EAAKhD,SAAUR,EAAKyB,UAIpC,OAFApE,KAAK0D,QAAQzB,KAAKoB,GAClBrD,KAAKqE,YAAYhB,GACV5B,EAGX,OAAO5C,EAAkBwH,oB,qBAG7B,SAAQzE,GAEJ,IAAIe,EAAO3C,KAAK+E,QAAQ/E,KAAKyD,UAE7B,GAAGd,EACH,CACI,IAAIwD,EAAMxD,EAAKyB,QACX3C,EAAMkB,EAAK2D,QAAQ1E,GAEnByB,EAAS,IAAIP,EACbhE,EAAaqG,SACb,CAAEjC,SAAUiD,EAAKhD,SAAUR,EAAKyB,UAIpC,OAFApE,KAAK0D,QAAQzB,KAAKoB,GAClBrD,KAAKqE,YAAYhB,GACV5B,EAGX,OAAO5C,EAAkBwH,oB,sBAG7B,SAASxE,GAEL,IAAIc,EAAO3C,KAAK+E,QAAQ/E,KAAKyD,UAE7B,GAAGd,EACH,CACI,IAAIwD,EAAMxD,EAAKyB,QACX3C,EAAMkB,EAAK4D,SAAS1E,GAEpBwB,EAAS,IAAIP,EACbhE,EAAauG,UACb,CAAEnC,SAAUiD,EAAKhD,SAAUR,EAAKyB,UAIpC,OAFApE,KAAK0D,QAAQzB,KAAKoB,GAClBrD,KAAKqE,YAAYhB,GACV5B,EAGX,OAAO5C,EAAkBwH,oB,oBAG7B,SAAOvE,GAEH,IAAIa,EAAO3C,KAAK+E,QAAQ/E,KAAKyD,UAE7B,GAAGd,EACH,CACI,IAAIwD,EAAMxD,EAAKyB,QACX3C,EAAMkB,EAAKuC,OAAOpD,GAElBuB,EAAS,IAAIP,EACbhE,EAAagG,QACb,CAAE5B,SAAUiD,EAAKhD,SAAUR,EAAKyB,UAIpC,OAFApE,KAAK0D,QAAQzB,KAAMoB,GACnBrD,KAAKqE,YAAahB,GACX5B,EAGX,OAAO5C,EAAkBwH,oB,uBAG7B,SAAU9E,GAEN,IAAIoB,EAAO3C,KAAK+E,QAAQ/E,KAAKyD,UAE7B,GAAGd,EACH,CACI,IAAIwD,EAAMxD,EAAKyB,QACX3C,EAAMkB,EAAKqC,UAAUzD,GAErB8B,EAAS,IAAIP,EACbhE,EAAamG,WACb,CAAE/B,SAAUiD,EAAKhD,SAAUR,EAAKyB,UAIpC,OAFApE,KAAK0D,QAAQzB,KAAMoB,GACnBrD,KAAKqE,YAAahB,GACX5B,EAGX,OAAO5C,EAAkBwH,oB,yBAK7B,SAAYhD,GAERrD,KAAKwG,kBACLxG,KAAKE,cACD,IAAIC,YAA+B,aAAc,CAAEC,OAAQ,CAAEiD,e,yBAIrE,WAEIrD,KAAKE,cACD,IAAIC,YAAY,iB,yBAIxB,SAAYwC,GAER3C,KAAKE,cACD,IAAIC,YAA2B,aAAc,CAAEC,OAAQ,CAAEuC,c,uBAndjE,SAAgBtC,GAEZ,IAAIoG,EAAU,IAAIlD,EA2BlB,OAzBGlD,IAECoG,EAAQ7C,OAASvD,EAAIuD,OAErB6C,EAAQjD,MACJnD,EAAImD,MAAMlC,KAAI,SAACqB,GACX,OAAOnC,EAAK8C,SAASX,MACxBF,QAAO,SAACE,GACL,OAAOA,KAEf8D,EAAQ/C,QACJrD,EAAIqD,QAAQpC,KAAI,SAAC+B,GACb,OAAOP,EAAOQ,SAASD,MAC1BZ,QAAO,SAACY,GACL,OAAOA,KAEfoD,EAAQ9C,cACJtD,EAAIsD,cAAcrC,KAAI,SAAC+B,GACnB,OAAOP,EAAOQ,SAASD,MAC1BZ,QAAO,SAACY,GACL,OAAOA,MAGnBoD,EAAQD,gBAAgB,GAAIzH,EAAUgF,gBAE/B0C,M,eA1CclG,cAsedgD,IC5ZAmD,E,kDApEX,aACC,IAAD,8BACI,gBALJpG,SAAqB,IAAIR,EAIzB,EAHA6G,eAAiC,IAAIpD,EAMjC,EAAKqD,OAEL,EAAKD,eAAeE,iBAChB,cAAc,WAAQ,EAAKC,UAC/B,EAAKxG,SAASuG,iBACV,eAAe,WAAQ,EAAKC,UARpC,E,wCAWA,WACC,IAAD,QAEQC,EACAC,EAAoBC,aAAY,SACjCD,IACCD,EAAcG,KAAKC,MAAMH,IAC7BhH,KAAKM,SAAWR,EAASwD,SAAT,UAAkByD,SAAlB,aAAkB,EAAazG,UAC/CN,KAAK2G,eAAiBpD,EAAeD,SAAf,UAAwByD,SAAxB,aAAwB,EAAaJ,gBAEvDI,GAAe,UAAEA,SAAF,OAAE,EAAaJ,gBAAmB,UAAEI,SAAF,OAAE,EAAazG,UAChEN,KAAK8G,OAET9G,KAAKoH,c,kBAGT,WAEIH,aAAY,SAAeC,KAAKG,UAAU,CACtC/G,SAAUN,KAAKM,SAAS8C,SACxBuD,eAAgB3G,KAAK2G,eAAevD,WAGxCpD,KAAKsH,c,kBAGT,WAEIL,aAAaM,WAAW,YAExBvH,KAAK4G,OACL5G,KAAKwH,c,uBAGT,WAEIxH,KAAKE,cACD,IAAIuH,MAAM,W,uBAIlB,WAEIzH,KAAKE,cACD,IAAIuH,MAAM,W,uBAIlB,WAEIzH,KAAKE,cACD,IAAIuH,MAAM,a,eApEIlH,cCCXmH,EAFKC,IAAMC,cAAc,IAAIlB,G,eCgF7BmB,ICrEVC,EDqEUD,EA9Ef,WAEI,MAAmCE,qBAAWL,GAAvCf,EAAP,EAAOA,eAAgBrG,EAAvB,EAAuBA,SAEjB0H,EAAoBC,uBAAY,SAAClI,GACnC,MAAM,wBAAN,OAA+BA,EAAMmI,WAArC,UACD,IACH,EAA0CC,mBAASH,EAAkB1H,EAASP,QAA9E,mBAAOqI,EAAP,KAAsBC,EAAtB,KACMC,EAAcL,uBAAY,WAC5BI,EAAiBL,EAAkB1H,EAASP,UAC7C,CAACiI,EAAmB1H,IAEjBiI,EAAYC,iBAAyB,MACrCC,EAAWD,iBAA0B,MACrCE,EAAST,uBAAY,WAEtB,IAAD,IADGM,EAAUI,SAAWF,EAASE,UAE7BhC,EAAeH,gBAAf,UACI+B,EAAUI,QAAQC,aADtB,QAC+B,GAD/B,UAEIH,EAASE,QAAQC,aAFrB,QAE2C7J,EAAUgF,gBACrDuB,QAAQC,IAAIgD,EAAUI,QAAQC,UAEpC,CAACjC,EAAgB4B,IAEbM,EAAaZ,uBAAY,WAC3BtB,EAAemC,SAChB,CAACnC,IAEEoC,EAAad,uBAAY,WAC3BtB,EAAeqC,SAChB,CAACrC,IASJ,OAPAsC,qBAAU,WAEN,OADA3I,EAASuG,iBAAiB,cAAeyB,GAClC,WACHhI,EAAS4I,oBAAoB,cAAeZ,MAEjD,CAAChI,EAAUgI,IAGV,sBAAKa,UAAU,YAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,wBACIA,UAAU,yBACVC,QAASV,EAFb,SAGI,qBAAKW,IAAKjB,EAAekB,IAAI,aAEjC,uBACIC,KAAK,OACLJ,UAAU,wBACVK,IAAKjB,OAEb,sBAAKY,UAAU,oBAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,uBAAOM,QAAQ,kBAAf,qBACA,yBAAQC,GAAG,kBAAkBF,IAAKf,EAAlC,UACI,wBAAQG,MAAO7J,EAAUgF,eAAzB,yBACA,wBAAQ6E,MAAO7J,EAAUgH,eAAzB,yBACA,wBAAQ6C,MAAO7J,EAAU8G,SAAzB,sBACA,wBAAQ+C,MAAO7J,EAAUkH,SAAzB,sBACA,wBAAQ2C,MAAO7J,EAAU6G,kBAAzB,0BACA,wBAAQgD,MAAO7J,EAAUiH,kBAAzB,gCAGR,sBAAKmD,UAAU,6BAAf,UACI,wBAAQA,UAAU,2BAA2BC,QAASP,EAAtD,kBAGA,wBAAQM,UAAU,2BAA2BC,QAASL,EAAtD,4B,gBC3DfjB,O,eAAAA,I,iBAAAA,I,eAAAA,I,gBAAAA,M,KAuLUtH,MA/Kf,SAAcmJ,GAEV,MAAmC5B,qBAAWL,GAAvCf,EAAP,EAAOA,eAAgBrG,EAAvB,EAAuBA,SACvB,EAA4B6H,mBAASxB,EAAelD,WAAakG,EAAMlJ,IAAvE,mBAAOmJ,EAAP,KAAeC,EAAf,KACA,EAAgC1B,mBAASL,EAASgC,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAkBhC,uBAAY,SAAClI,GACjC,MAAM,wBAAN,OAA+BA,EAAMmI,WAArC,UACD,IACH,EAAsCC,mBAAS8B,EAAgB3J,EAASP,QAAxE,mBAAOmK,EAAP,KAAoBC,EAApB,KACM7B,EAAcL,uBAAY,WAC5BkC,EAAeF,EAAgB3J,EAASP,UACzC,CAACkK,EAAiB3J,IAEf8J,EAAU5B,iBAAyB,MACnC6B,EAAU7B,iBAAyB,MACnC8B,EAAU9B,iBAAyB,MAEnCpC,EAAU6B,uBAAY,WACrBtB,EAAelD,WAAakG,EAAMlJ,IAAMsJ,IAAajC,EAASyC,OAASF,EAAQ1B,SAC9EhC,EAAeP,QAAQiE,EAAQ1B,QAAQC,OAC3CoB,EAAYlC,EAASgC,QACtB,CAACnD,EAAgBgD,EAAMlJ,GAAIsJ,EAAUM,IAElC/D,EAAU2B,uBAAY,WACrBtB,EAAelD,WAAakG,EAAMlJ,IAAMsJ,IAAajC,EAAS0C,MAAQF,EAAQ3B,SAC7EhC,EAAeL,QAAQgE,EAAQ3B,QAAQC,OAC3CoB,EAAYlC,EAASgC,QACtB,CAACnD,EAAgBgD,EAAMlJ,GAAIsJ,EAAUO,IAElCpF,EAAS+C,uBAAY,WACpBtB,EAAelD,WAAakG,EAAMlJ,IAAMsJ,IAAajC,EAAS2C,MAAQL,EAAQzB,UAE7EhC,EAAezB,OAAOkF,EAAQzB,QAAQC,OACtCwB,EAAQzB,QAAQC,MAAQ,IAE5BtD,QAAQC,IAAI,aACb,CAACoB,EAAgBgD,EAAMlJ,GAAIsJ,EAAUK,IAElCpF,EAAYiD,uBAAY,SAAC/F,GACxByE,EAAelD,WAAakG,EAAMlJ,IAAMsJ,IAAajC,EAAS2C,MAC7D9D,EAAe3B,UAAU9C,KAC9B,CAACyE,EAAgBgD,EAAMlJ,GAAIsJ,IAExBW,EAAazC,uBAAY,WACxBtB,EAAelD,WAAakG,EAAMlJ,IACjCkG,EAAeY,eACpB,CAACZ,EAAgBgD,EAAMlJ,KAEpBkK,EAAiB1C,uBAAY,WAC/B4B,EAAUlD,EAAelD,WAAakG,EAAMlJ,MAC7C,CAACkG,EAAgBgD,EAAMlJ,KAEpBmK,EAAkB3C,uBAAY,SAAC4C,GAC9BlE,EAAelD,WAAakG,EAAMlJ,IACjCkG,EAAeJ,UAAUoD,EAAMmB,OACnCD,EAAGE,oBACJ,CAACpE,EAAgBgD,EAAMlJ,GAAIkJ,EAAMmB,QAE9BE,EAAmB/C,uBAAY,WAC9BtB,EAAelD,WAAakG,EAAMlJ,GACjCkG,EAAehC,YAAY,GAE3BgC,EAAehC,WAAWgF,EAAMlJ,MACrC,CAACkG,EAAgBgD,EAAMlJ,KAEpBwK,EAAkBhD,uBAAY,SAAC4C,GACjCA,EAAGE,oBACJ,IAkBH,OAhBA9B,qBAAU,WACNtC,EAAeE,iBAAiB,aAAc8D,GAC9CrK,EAASuG,iBAAiB,cAAeyB,GACzC,IAAI4C,EAAUd,EAAQzB,QAClBwC,EAAWd,EAAQ1B,QACnByC,EAAWd,EAAQ3B,QAKvB,OAHGuC,IAASA,EAAQG,SAAWnG,GAC5BiG,IAAUA,EAASE,SAAWjF,GAC9BgF,IAAUA,EAASC,SAAW/E,GAC1B,WACHK,EAAeuC,oBAAoB,aAAcyB,GACjDrK,EAAS4I,oBAAoB,cAAeZ,MAEjD,CAAC3B,EAAgBrG,EAAUqK,EAAgBP,EAASC,EAASC,EAASpF,EAAQkB,EAASE,EAASgC,IAG/F,sBAAKa,UAAW,QAAWS,EAAS,eAAiB,IAArD,UACI,sBAAKT,UAAU,WAAWC,QAAS4B,EAAnC,UACI,sBAAK7B,UAAU,qBAAf,UACkBY,IAAajC,EAASyC,OAASX,EACjC,uBACJT,UAAU,gBACVC,QAAU6B,EACVzB,IAAMa,EACNd,KAAK,OACL+B,aAAc3B,EAAMjJ,OAGpB,oBAAIyI,UAAU,YAAd,SAA4BQ,EAAMjJ,OAE1C,qBACIyI,UAAW,gBAAmBS,EAAS,GAAK,gBAC5CR,QAAS,SAACyB,GACNb,EACID,IAAajC,EAASyC,MAAQzC,EAASgC,KAAOhC,EAASyC,OAC3DM,EAAGE,mBALX,SAMO,qBAAK1B,IAAKa,EAAaZ,IAAI,cAEtC,qBACIH,UACI,cACIQ,EAAMmB,MAAQ,iBAAmB,oBACzC1B,QAASwB,OAEjB,sBAAKzB,UAAW,eAAkBS,EAAS,GAAK,gBAAhD,UACI,sBAAKT,UAAU,qBAAf,UACkBY,IAAajC,EAAS0C,KACxB,uBACJrB,UAAU,gBACVK,IAAMc,EACNf,KAAK,OACL+B,aAAc3B,EAAMhJ,OAGpB,mBAAGwI,UAAU,YAAb,SAA2BQ,EAAMhJ,OAGzC,qBACIwI,UAAU,eACVC,QAAS,WACLY,EACID,IAAajC,EAAS0C,KAAO1C,EAASgC,KAAOhC,EAAS0C,OAJlE,SAKD,qBAAKnB,IAAKa,EAAaZ,IAAI,cAE9B,sBAAKH,UAAU,YAAf,UAEQQ,EAAM/I,KAAKU,KAAI,SAACC,EAAKiD,GACjB,OACI,sBAAK2E,UAAU,WAAf,UACM5H,EACC,WAAQ,GAAGwI,IAAajC,EAAS2C,KAChC,OAAQ,qBACJtB,UAAU,mBACVC,QAAS,WACLpE,EAAUzD,IAHV,eADT,KAFwBiD,MAa3C,qBACI2E,UAAU,eACVC,QAAS,WACLY,EACID,IAAajC,EAAS2C,KAAO3C,EAASgC,KAAOhC,EAAS2C,OAJlE,SAKO,qBAAKpB,IAAKa,EAAaZ,IAAI,cAEnC,WAAQ,GAAGS,IAAajC,EAAS2C,KAChC,OAAQ,uBACJtB,UAAU,gBACVK,IAAMY,EACNb,KAAK,SAJV,GAMH,qBAAKJ,UAAU,eAAf,SACI,wBAAQA,UAAU,mBAAmBC,QAASsB,EAA9C,6B,MCtJLa,MA/Bf,WAEI,IAAQ5E,EAAmBoB,qBAAWL,GAA9Bf,eACR,EAA0BwB,mBAASxB,EAAe6E,kBAAlD,mBAAOhI,EAAP,KAAciI,EAAd,KAEMC,EAAczD,uBAAY,WAC5BwD,EAAS9E,EAAe6E,oBACzB,CAACC,EAAU9E,IAOd,OALAsC,qBAAU,WAEN,OADAtC,EAAeE,iBAAiB,aAAc6E,GACvC,WAAQ/E,EAAeuC,oBAAoB,aAAcwC,MACjE,CAAC/E,EAAgB+E,IAGhB,qBAAKvC,UAAU,WAAf,SAEQ3F,EAAMlC,KAAI,SAACqB,GACP,OAAO,cAAC,EAAD,CAEHlC,GAAIkC,EAAKlC,GACTC,KAAMiC,EAAKjC,KACXC,KAAMgC,EAAK9B,YACXD,KAAM+B,EAAK/B,KACXkK,MAAOnI,EAAKzB,WALPyB,EAAKlC,U,MCZnBkL,MAVf,WAEI,OACI,sBAAKxC,UAAU,aAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,Q,MCgFGyC,MAtFf,WAEI,IAAMvB,EAAU7B,iBAAyB,MACnC8B,EAAU9B,iBAA4B,MACtC4B,EAAU5B,iBAAyB,MAEzC,EAAwBL,mBAAmB,IAA3C,mBAAOvH,EAAP,KAAaiL,EAAb,KAEMnF,EAAcqB,qBAAWL,GAEzBxC,EAAS+C,uBAAY,WACpBmC,EAAQzB,UAEP/H,EAAKqB,KAAKmI,EAAQzB,QAAQC,OAC1BiD,EAAQjL,EAAKU,KAAI,SAACsB,GAAD,OAAOA,MACxBwH,EAAQzB,QAAQC,MAAQ,MAE7B,CAACwB,EAASxJ,IAEPoE,EAAYiD,uBAAY,SAAC6D,GAC3BlL,EAAKmL,OAAOD,EAAO,GACnBD,EAAQjL,EAAKU,KAAI,SAACsB,GAAD,OAAOA,QACzB,CAAChC,IAEEoL,EAAa/D,uBAAY,WAC3B,GAAGoC,EAAQ1B,SAAW2B,EAAQ3B,SAAWyB,EAAQzB,QACjD,CACI,IAAIlH,EAAMiF,EAAYC,eAAesF,WACjC5B,EAAQ1B,QAAQC,MAAO0B,EAAQ3B,QAAQC,MAAOhI,EAAKU,KAAI,SAACsB,GAAD,OAAOA,MAElE0C,QAAQC,IAAI9D,GAEZoK,EAAQ,IACRzB,EAAQzB,QAAQC,MAAQ,GACxB0B,EAAQ3B,QAAQC,MAAQ,GACxByB,EAAQ1B,QAAQC,MAAQ,MAE7B,CAACyB,EAASC,EAASF,EAAS1D,EAAa9F,IAO5C,OALAqI,qBAAU,WACHmB,EAAQzB,UACPyB,EAAQzB,QAAQ0C,SAAWnG,KAChC,CAACkF,EAASlF,IAGT,sBAAKiE,UAAU,WAAf,UACI,oBAAIA,UAAU,mBAAd,yBACA,uBAAOM,QAAQ,qBAAf,mBAGA,uBAAOC,GAAG,qBAAqBP,UAAU,qBAAqBK,IAAKa,EAASd,KAAK,SACjF,uBAAOE,QAAQ,qBAAf,0BAGA,0BAAUC,GAAG,qBAAqBP,UAAU,qBAAqBK,IAAKc,IACtE,uBAAOb,QAAQ,oBAAf,mBAGA,qBAAKN,UAAkD,GAAvD,SAEQvI,EAAKU,KAAI,SAACC,EAAKiD,GACX,OACI,sBAAK2E,UAAU,eAAf,UACM5H,EACF,qBACI4H,UAAU,mBACVC,QAAS,WACLpE,EAAUR,IAHlB,iBAF+BA,QAYnD,uBACIkF,GAAG,oBACHP,UAAU,oBACVK,IAAKY,EACLb,KAAK,SACT,wBACIJ,UAAU,uBACVC,QAAS,WAAQ4C,KAFrB,4B,MCxBGlM,MArDf,WAEI,IAAMoM,EAAUnE,qBAAWL,GACnBpH,EAAa4L,EAAb5L,SAER,EAAgC6H,oBAAS,GAAzC,mBAAOgE,EAAP,KAAiBC,EAAjB,KAEMC,EAAiBpE,uBAAY,SAAClI,GAChC,MAAM,qBAAN,OAA4BA,EAAMmI,WAAlC,UACD,IAEH,EAAoCC,mBAASkE,EAAe/L,EAASP,QAArE,mBAAOuM,EAAP,KAAmBC,EAAnB,KAEMjE,EAAcL,uBAAY,WAC5BsE,EAAcF,EAAe/L,EAASP,UACvC,CAACsM,EAAgB/L,IAEdkM,EAAavE,uBAAY,WAC3BmE,GAAaD,KACd,CAACA,IAEEM,EAAcxE,uBAAY,WACzB3H,EAASP,QAAUf,EAAMa,KACxBS,EAASoM,SAAS1N,EAAMY,OACpBU,EAASP,QAAUf,EAAMY,OAC7BU,EAASoM,SAAS1N,EAAMa,QAC7B,CAACS,IAEEqM,EAAW1E,uBAAY,WACtBkE,GACCD,EAAQU,SACb,CAACT,EAAUD,IASd,OAPAjD,qBAAU,WAEN,OADA3I,EAASuG,iBAAiB,cAAeyB,GACjC,WACJhI,EAAS4I,oBAAoB,cAAeZ,MAEjD,CAAChI,EAAUgI,IAGV,sBAAKa,UAAU,WAAf,UACI,qBAAKA,UAAU,kBAAkBC,QAASoD,EAA1C,SACI,qBAAKnD,IAAKiD,EAAYhD,IAAI,UAE9B,sBAAKH,UAAW,iBAAoBgD,EAAW,GAAK,oBAApD,UACI,wBAAQhD,UAAU,uBAAuBC,QAASqD,EAAlD,mBACA,wBAAQtD,UAAU,gBAAgBC,QAASuD,EAA3C,8B,MCdDE,MAhCf,WAEI,IAAQvM,EAAayH,qBAAWL,GAAxBpH,SAEFwM,EAAmB7E,uBAAY,SAAClI,GAClC,MAAM,8BAAN,OAAqCA,EAAMmI,WAA3C,UACD,IAEH,EAAwCC,mBAAS2E,EAAiBxM,EAASP,QAA3E,mBAAOgN,EAAP,KAAqBC,EAArB,KAEM1E,EAAcL,uBAAY,WAC5B+E,EAAgBF,EAAiBxM,EAASP,UAC3C,CAAC+M,EAAkBxM,IAStB,OAPA2I,qBAAU,WAEN,OADA3I,EAASuG,iBAAiB,cAAeyB,GACjC,WACJhI,EAAS4I,oBAAoB,cAAeZ,MAEjD,CAAChI,EAAUgI,IAGV,yBAAQa,UAAU,SAAlB,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAKE,IAAK0D,EAAczD,IAAI,gBAC5B,8CAEJ,cAAC,EAAD,Q,MCAG2D,MAzBf,WAEE,IAAQ3M,EAAayH,qBAAWL,GAAxBpH,SACR,EAA0B6H,mBAAS7H,EAASP,OAA5C,mBAAOA,EAAP,KAAc2M,EAAd,KAEMpE,EAAcL,uBAAY,WAC9ByE,EAASpM,EAASP,SACjB,CAACO,EAAUoM,IASd,OAPAzD,qBAAU,WAER,OADA3I,EAASuG,iBAAiB,cAAeyB,GACjC,WACNhI,EAAS4I,oBAAoB,cAAeZ,MAE7C,CAAChI,EAAUgI,IAGZ,sBAAKa,UAAW,aAAepJ,EAA/B,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCjBFmN,G,MAAY,IAAIxG,GAEtBwG,EAAUrG,iBAAiB,QAAQ,WAAQsG,OAAOC,SAASC,YAE3DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAYC,SAAb,CAAsB7E,MAAQsE,EAA9B,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,SAG1B1O,M","file":"static/js/main.062cc05d.chunk.js","sourcesContent":["\r\nimport Item from './Item';\r\n\r\nconst allowedChars = [\r\n    'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\r\n    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\r\n    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', \r\n    '-', '_', '+', '=', '*', ' ', '\\n', \r\n];\r\n\r\ninterface TodoDataJson\r\n{\r\n    settings: SettingsJson,\r\n    itemCollection: ItemCollectionJson\r\n}\r\n\r\ninterface ItemJson\r\n{\r\n    ID: number\r\n    name: string\r\n    description: string\r\n    creationTime: number;\r\n    lastModifiedTime: number;\r\n    completed: boolean;\r\n    tags: Array<string>\r\n}\r\n\r\ninterface ItemCollectionJson\r\n{\r\n    items: Array<ItemJson>;\r\n    changes: Array<ChangeJson>;\r\n    undoneChanges: Array<ChangeJson>;\r\n    lastID: number;\r\n}\r\n\r\ninterface SettingsJson\r\n{\r\n    theme: Theme\r\n}\r\n\r\ninterface ChangeJson\r\n{\r\n    time: number;\r\n    action: ChangeAction;\r\n    oldValue?: ItemJson;\r\n    newValue?: ItemJson;\r\n}\r\n\r\ninterface ChangeData\r\n{\r\n    newValue?: Item, \r\n    oldValue?: Item\r\n}\r\n\r\ninterface I_Item\r\n{\r\n    ID: number,\r\n    name: string,\r\n    description: string,\r\n    creationTime: number,\r\n    lastModifiedTime: number,\r\n    completed: boolean,\r\n    tags: Array<string>,\r\n\r\n    setName: (newName: string) => ValidationMessage,\r\n    setDesc: (newDesc: string) => ValidationMessage,\r\n    setState: (newState: boolean) => ValidationMessage,\r\n    addTag: (newTag: string) => ValidationMessage,\r\n    removeTag: (tag: string) => ValidationMessage\r\n}\r\n\r\nenum ValidationMessage\r\n{\r\n    OK, EMPTY, INVALID_CHAR, DOESNT_EXIST, ALREADY_EXISTS, ITEM_NOT_SELECTED\r\n}\r\n\r\nenum ChangeAction\r\n{\r\n    REMOVE_ITEM, ADD_ITEM, \r\n    SET_NAME, SET_DESC, SET_STATE, \r\n    ADD_TAG, REMOVE_TAG\r\n}\r\n\r\nenum SortOrder\r\n{\r\n    ASC_NAME = 'ascName', DSC_NAME = 'dscName',\r\n    ASC_DATE_ADDED = 'ascCreated', DSC_DATE_ADDED = 'dscCreated',\r\n    ASC_DATE_MODIFIED = 'ascModified', DSC_DATE_MODIFIED = 'dscModified'\r\n}\r\n\r\nenum Theme\r\n{\r\n    LIGHT = 'light',\r\n    DARK = 'dark'\r\n}\r\n\r\nconst availableThemes = [\r\n    Theme.LIGHT,\r\n    Theme.DARK\r\n];\r\n\r\nexport type {\r\n    I_Item,\r\n    ItemJson,\r\n    SettingsJson,\r\n    ChangeJson,\r\n    ChangeData,\r\n    ItemCollectionJson,\r\n    TodoDataJson\r\n};\r\n\r\nexport {\r\n    ValidationMessage,\r\n    ChangeAction,\r\n    SortOrder,\r\n    Theme,\r\n    allowedChars,\r\n    availableThemes\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Theme, availableThemes, SettingsJson } from './Todo';\r\n\r\nclass Settings extends EventTarget\r\n{\r\n    theme: Theme;\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        \r\n        this.theme = Theme.DARK;\r\n    }\r\n\r\n    setTheme(theme: Theme)\r\n    {\r\n        this.theme = theme;\r\n        this.themeChangeEvent();\r\n    }\r\n\r\n    getThemes(): Array<Theme>\r\n    {\r\n        return availableThemes;\r\n    }\r\n\r\n    themeChangeEvent()\r\n    {\r\n        this.dispatchEvent(\r\n            new CustomEvent<{theme: Theme}>('themeChange', { detail: {theme: this.theme} })\r\n        );\r\n    }\r\n\r\n    static fromJson(obj?: SettingsJson): Settings\r\n    {\r\n        let settings = new Settings();\r\n        if(obj)\r\n            settings.theme = obj.theme;\r\n        return settings;\r\n    }\r\n\r\n    toJson(): SettingsJson\r\n    {\r\n        return {\r\n            theme: this.theme\r\n        };\r\n    }\r\n}\r\n\r\nexport default Settings;\r\n","import { \r\n    I_Item, \r\n    ItemJson, \r\n    ValidationMessage,\r\n    allowedChars } from './Todo';\r\n\r\nclass Item implements I_Item\r\n{\r\n    ID: number\r\n    name: string\r\n    description: string\r\n    creationTime: number = Date.now();\r\n    lastModifiedTime: number = Date.now();\r\n    completed: boolean = false;\r\n    tags: Array<string>\r\n\r\n    constructor(ID: number, name: string, desc: string, tags: Array<string>)\r\n    {\r\n        this.ID = ID;\r\n        this.name = name;\r\n        this.description = desc;\r\n        this.tags = tags;\r\n    }\r\n\r\n    static fromJson(obj?: ItemJson): Item | undefined\r\n    {\r\n        if(!obj)\r\n            return undefined;\r\n\r\n        let item = new Item(\r\n            obj.ID, \r\n            obj.name, \r\n            obj.description, \r\n            obj.tags.map((e) => e));\r\n\r\n        item.creationTime = obj.creationTime;\r\n        item.lastModifiedTime = obj.lastModifiedTime;\r\n        item.completed = obj.completed;\r\n\r\n        return item;\r\n    }\r\n\r\n    clone(): Item\r\n    {\r\n        let newItem = new Item(0, '', '', []);\r\n        Object.assign(newItem, this);\r\n        newItem.tags = this.tags.map((tag) => tag);\r\n        return newItem;\r\n    }\r\n\r\n    toJson(): ItemJson\r\n    {\r\n        return {\r\n            ID: this.ID,\r\n            name: this.name,\r\n            description: this.description,\r\n            creationTime: this.creationTime,\r\n            lastModifiedTime: this.lastModifiedTime,\r\n            completed: this.completed,\r\n            tags: this.tags,\r\n        };\r\n    }\r\n\r\n    setName(newName: string): ValidationMessage\r\n    {\r\n        let msg = Item.checkStringInput(newName);\r\n        if(msg !== ValidationMessage.OK)\r\n            return msg;\r\n        \r\n        this.name = newName;\r\n        this.lastModifiedTime = Date.now();\r\n        return ValidationMessage.OK;\r\n    }\r\n\r\n    setDesc(newDesc: string): ValidationMessage\r\n    {\r\n        let msg = Item.checkStringInput(newDesc);\r\n        if(msg !== ValidationMessage.OK)\r\n            return msg;\r\n        \r\n        this.description = newDesc;\r\n        this.lastModifiedTime = Date.now();\r\n        return ValidationMessage.OK;\r\n    }\r\n\r\n    setState(newState: boolean): ValidationMessage\r\n    {\r\n        this.completed = newState;\r\n        this.lastModifiedTime = Date.now();\r\n        return ValidationMessage.OK;\r\n    }\r\n\r\n    addTag(newTag: string): ValidationMessage\r\n    {\r\n        let msg = Item.checkStringInput(newTag);\r\n        if(msg !== ValidationMessage.OK)\r\n            return msg;\r\n\r\n        if(this.tags.includes(newTag))\r\n            return ValidationMessage.ALREADY_EXISTS;\r\n\r\n        this.tags.push(newTag);\r\n        this.lastModifiedTime = Date.now();\r\n        return ValidationMessage.OK;\r\n    }\r\n\r\n    removeTag(oldTag: string): ValidationMessage\r\n    {\r\n        if(oldTag.trim() === '')\r\n            return ValidationMessage.EMPTY;\r\n        if([...oldTag].some((char) => { return !allowedChars.includes(char); }))\r\n            return ValidationMessage.INVALID_CHAR;\r\n\r\n        let doesntExistFlag = true;\r\n        this.tags = this.tags.filter((tag) => { \r\n            if(tag === oldTag)\r\n                doesntExistFlag = false; \r\n            return tag !== oldTag; });\r\n\r\n        if(doesntExistFlag)\r\n            return ValidationMessage.DOESNT_EXIST;\r\n\r\n        this.lastModifiedTime = Date.now();\r\n        return ValidationMessage.OK;\r\n    }\r\n\r\n    static checkStringInput(input: string): ValidationMessage\r\n    {\r\n        if(input.trim() === '')\r\n            return ValidationMessage.EMPTY;\r\n        if([...input].some((char) => { return !allowedChars.includes(char); }))\r\n            return ValidationMessage.INVALID_CHAR;\r\n\r\n        return ValidationMessage.OK;\r\n    }\r\n\r\n}\r\n\r\nexport default Item;\r\n","import { ChangeAction, ChangeJson, ChangeData } from './Todo';\r\nimport Item from './Item';\r\n\r\nclass Change\r\n{\r\n    time: number;\r\n    action: ChangeAction;\r\n    oldValue?: Item;\r\n    newValue?: Item;\r\n\r\n    constructor(action: ChangeAction, data: ChangeData)\r\n    {\r\n        this.time = Date.now();\r\n        this.action = action;\r\n        this.oldValue = data.oldValue;\r\n        this.newValue = data.newValue;\r\n    }\r\n\r\n    static fromJson(obj?: ChangeJson): Change | undefined\r\n    {\r\n        if(!obj)\r\n            return undefined;\r\n\r\n        let change = new Change(\r\n            obj.action, \r\n            {\r\n                oldValue: Item.fromJson(obj.oldValue), \r\n                newValue: Item.fromJson(obj.newValue)\r\n            });\r\n        change.time = obj.time;\r\n        return change;\r\n    }\r\n\r\n    toJson(): ChangeJson\r\n    {\r\n        return {\r\n            time: this.time,\r\n            action: this.action,\r\n            oldValue: this.oldValue?.toJson(),\r\n            newValue: this.newValue?.toJson()\r\n        };\r\n    }\r\n}\r\n\r\nexport default Change;\r\n","import { I_Item, SortOrder, ValidationMessage, ItemCollectionJson, ChangeAction } from './Todo';\r\nimport Item from './Item';\r\nimport Change from './Change';\r\n\r\nclass ItemCollection extends EventTarget implements I_Item\r\n{\r\n    items: Array<Item> = [];\r\n    selected: number = -1;\r\n    changes: Array<Change> = [];\r\n    undoneChanges: Array<Change> = [];\r\n\r\n    lastID: number = 0;\r\n\r\n    searchItems: Array<Item> = [];\r\n    filter: string = '';\r\n    order: SortOrder = SortOrder.ASC_DATE_ADDED;\r\n\r\n    static fromJson(obj?: ItemCollectionJson): ItemCollection\r\n    {\r\n        let itemCol = new ItemCollection();\r\n\r\n        if(obj)\r\n        {\r\n            itemCol.lastID = obj.lastID;\r\n\r\n            itemCol.items = (\r\n                obj.items.map((item) => { \r\n                    return Item.fromJson(item); })\r\n                .filter((item) => { \r\n                    return item; })) as Item[];\r\n\r\n            itemCol.changes = (\r\n                obj.changes.map((change) => { \r\n                    return Change.fromJson(change); })\r\n                .filter((change) => { \r\n                    return change; })) as Change[];\r\n\r\n            itemCol.undoneChanges = (\r\n                obj.undoneChanges.map((change) => { \r\n                    return Change.fromJson(change); })\r\n                .filter((change) => { \r\n                    return change; })) as Change[];\r\n        }\r\n        \r\n        itemCol.setSearchParams('', SortOrder.ASC_DATE_ADDED);\r\n\r\n        return itemCol;\r\n    }\r\n\r\n    toJson(): ItemCollectionJson\r\n    {\r\n        return {\r\n            items: this.items.map((item) => { return item.toJson(); }),\r\n            changes: this.changes.map((change) => { return change.toJson(); }),\r\n            undoneChanges: this.undoneChanges.map((change) => { return change.toJson(); }),\r\n            lastID: this.lastID\r\n        };\r\n    }\r\n\r\n    selectItem(ID: number): ValidationMessage\r\n    {\r\n        let item = this.items.find((item) => { return item.ID === ID; });\r\n        if(item)\r\n        {\r\n            this.selected = ID;\r\n            this.selectEvent(item);\r\n            return ValidationMessage.OK;\r\n        }\r\n\r\n        this.selected = -1;\r\n        this.selectEvent();\r\n        return ValidationMessage.DOESNT_EXIST;\r\n    }\r\n    \r\n    removeItem(ID?: number): ValidationMessage\r\n    {\r\n        if(!ID)\r\n            ID = this.selected;\r\n        \r\n        let item = this.items.find((item) => { return item.ID === ID; });\r\n        if(item)\r\n        {\r\n            this.items = this.items.filter((f_item) => { return f_item !== item });\r\n\r\n            let change = new Change(\r\n                ChangeAction.REMOVE_ITEM,\r\n                { oldValue: item.clone() }\r\n            );\r\n            this.changes.push(change);\r\n            this.changeEvent(change);\r\n            return ValidationMessage.OK;\r\n        }\r\n\r\n        return ValidationMessage.DOESNT_EXIST;\r\n    }\r\n\r\n    createItem(name: string, desc: string, tags: Array<string>): Array<ValidationMessage>\r\n    {\r\n        let errorList: ValidationMessage[] = [];\r\n\r\n        errorList[0] = Item.checkStringInput(name);\r\n        errorList[1] = Item.checkStringInput(desc);\r\n        tags.forEach((tag, i) => {\r\n            errorList[i + 2] = Item.checkStringInput(tag);\r\n        });\r\n\r\n        if(errorList.some((msg) => { return msg !== ValidationMessage.OK }))\r\n            return errorList;\r\n        \r\n        let item = new Item( this.createID(), name, desc, tags );\r\n        this.items.push( item );\r\n\r\n        let change = new Change(\r\n            ChangeAction.ADD_ITEM,\r\n            { newValue: item.clone() }\r\n        );\r\n        this.changes.push(change);\r\n        this.changeEvent(change);\r\n        this.selectItem(item.ID);\r\n\r\n        return errorList;\r\n    }\r\n\r\n    undo(change?: Change): ValidationMessage\r\n    {\r\n        if(!change)\r\n        {\r\n            change = this.changes.pop();\r\n\r\n            if(!change)\r\n                return ValidationMessage.DOESNT_EXIST;\r\n\r\n            this.undoneChanges.push(change);\r\n        }\r\n\r\n        let item;\r\n        let tagAdded;\r\n        \r\n        switch(change.action)\r\n        {\r\n            case ChangeAction.ADD_ITEM:\r\n                this.items = this.items.filter(({ID}) => {\r\n                    return change?.newValue?.ID ?? -1 !== ID;\r\n                });\r\n                break;\r\n            case ChangeAction.ADD_TAG:\r\n                tagAdded = change?.newValue?.tags.find((tag) => {\r\n                    return !change?.oldValue?.tags.includes(tag);\r\n                });\r\n\r\n                item = this.getItem(change?.newValue?.ID ?? -1);\r\n                \r\n                if(tagAdded && item)\r\n                    item.removeTag(tagAdded);\r\n\r\n                break;\r\n            case ChangeAction.REMOVE_ITEM:\r\n                item = change.oldValue?.clone();\r\n                if(item)\r\n                    this.items.push(item)\r\n                break;\r\n            case ChangeAction.REMOVE_TAG:\r\n                tagAdded = change?.oldValue?.tags.find((tag) => {\r\n                    return !change?.newValue?.tags.includes(tag);\r\n                });\r\n\r\n                item = this.getItem(change?.newValue?.ID ?? -1);\r\n                \r\n                if(tagAdded && item)\r\n                    item.addTag(tagAdded);\r\n\r\n                break;\r\n            case ChangeAction.SET_DESC:\r\n                item = this.getItem(change?.newValue?.ID ?? -1);\r\n                if(item)\r\n                    item.description = change?.oldValue?.description ?? item.description;\r\n                break;\r\n            case ChangeAction.SET_NAME:\r\n                item = this.getItem(change?.newValue?.ID ?? -1);\r\n                if(item)\r\n                    item.name = change?.oldValue?.name ?? item.name;\r\n                break;\r\n            case ChangeAction.SET_STATE:\r\n                item = this.getItem(change?.newValue?.ID ?? -1);\r\n                if(item)\r\n                    item.completed = change?.oldValue?.completed ?? item.completed;\r\n                break;\r\n        }\r\n\r\n        this.changeEvent(change);\r\n\r\n        return ValidationMessage.OK;\r\n    }\r\n\r\n    redo(change?: Change): ValidationMessage\r\n    {\r\n        if(!change)\r\n        {\r\n            change = this.undoneChanges.pop();\r\n            \r\n            if(!change)\r\n                return ValidationMessage.DOESNT_EXIST;\r\n\r\n            this.changes.push(change);\r\n        }\r\n\r\n        let item;\r\n        let tagAdded;\r\n        \r\n        switch(change.action)\r\n        {\r\n            case ChangeAction.ADD_ITEM:\r\n                item = change.newValue?.clone();\r\n                if(item)\r\n                    this.items.push(item)\r\n                break;\r\n            case ChangeAction.ADD_TAG:\r\n                tagAdded = change?.newValue?.tags.find((tag) => {\r\n                    return !change?.oldValue?.tags.includes(tag);\r\n                });\r\n\r\n                item = this.getItem(change?.newValue?.ID ?? -1);\r\n                console.log(item); console.log(tagAdded);\r\n                if(tagAdded && item)\r\n                    item.addTag(tagAdded);\r\n\r\n                break;\r\n            case ChangeAction.REMOVE_ITEM:\r\n                this.items = this.items.filter(({ID}) => {\r\n                    return change?.oldValue?.ID ?? -1 !== ID;\r\n                });\r\n                break;\r\n            case ChangeAction.REMOVE_TAG:\r\n                tagAdded = change?.oldValue?.tags.find((tag) => {\r\n                    return !change?.newValue?.tags.includes(tag);\r\n                });\r\n\r\n                item = this.getItem(change?.newValue?.ID ?? -1);\r\n                \r\n                if(tagAdded && item)\r\n                    item.removeTag(tagAdded);\r\n\r\n                break;\r\n            case ChangeAction.SET_DESC:\r\n                item = this.getItem(change?.newValue?.ID ?? -1);\r\n                if(item)\r\n                    item.description = change?.newValue?.description ?? item.description;\r\n                break;\r\n            case ChangeAction.SET_NAME:\r\n                item = this.getItem(change?.newValue?.ID ?? -1);\r\n                if(item)\r\n                    item.name = change?.newValue?.name ?? item.name;\r\n                break;\r\n            case ChangeAction.SET_STATE:\r\n                item = this.getItem(change?.newValue?.ID ?? -1);\r\n                if(item)\r\n                    item.completed = change?.newValue?.completed ?? item.completed;\r\n                break;\r\n        }\r\n\r\n        this.changeEvent(change);\r\n\r\n        return ValidationMessage.OK;\r\n    }\r\n\r\n    createID(): number\r\n    {\r\n        return this.lastID++;\r\n    }\r\n\r\n    getItem(ID: number): Item | undefined\r\n    {\r\n        return this.items.find((item) => {\r\n            return item.ID === ID;\r\n        });\r\n    }\r\n\r\n    setSearchParams(filter?: string, order?: SortOrder): ValidationMessage\r\n    {\r\n        if(filter !== undefined)\r\n            this.filter = filter;\r\n        if(order !== undefined)\r\n            this.order = order;\r\n\r\n        this.searchItems = this.items.filter((item) => {\r\n            return item.name.includes(this.filter);\r\n        }).sort((a: Item, b: Item) => {\r\n            switch(this.order)\r\n            {\r\n                case SortOrder.ASC_DATE_ADDED:\r\n                    return a.creationTime - b.creationTime;\r\n                case SortOrder.ASC_DATE_MODIFIED:\r\n                    return a.lastModifiedTime - b.lastModifiedTime;\r\n                case SortOrder.ASC_NAME:\r\n                    if(a.name.toUpperCase() < b.name.toUpperCase())\r\n                        return -1;\r\n                    if(a.name.toUpperCase() > b.name.toUpperCase())\r\n                        return 1;\r\n                    return 0;\r\n                case SortOrder.DSC_DATE_ADDED:\r\n                    return b.creationTime - a.creationTime;\r\n                case SortOrder.DSC_DATE_MODIFIED:\r\n                    return b.lastModifiedTime - a.lastModifiedTime;\r\n                case SortOrder.DSC_NAME:\r\n                    if(a.name.toUpperCase() < b.name.toUpperCase())\r\n                        return 1;\r\n                    if(a.name.toUpperCase() > b.name.toUpperCase())\r\n                        return -1;\r\n                    return 0;\r\n                default:\r\n                    return 0;\r\n            }\r\n        });\r\n\r\n        this.searchEvent();\r\n        return ValidationMessage.OK;\r\n    }\r\n\r\n    getSearchItems(): Array<Item>\r\n    {\r\n        return this.searchItems;\r\n    }\r\n\r\n    // === Item Getter/Setters ===\r\n    get ID(): number\r\n    {\r\n        return this.selected;\r\n    }\r\n\r\n    get name(): string\r\n    {\r\n        return this.getItem(this.selected)?.name || '';\r\n    }\r\n\r\n    get completed(): boolean\r\n    {\r\n        return this.getItem(this.selected)?.completed || false;\r\n    }\r\n\r\n    get description(): string\r\n    {\r\n        return this.getItem(this.selected)?.description || '';\r\n    }\r\n    \r\n    get creationTime(): number\r\n    {\r\n        return this.getItem(this.selected)?.creationTime || -1;\r\n    }\r\n    \r\n    get lastModifiedTime(): number\r\n    {\r\n        return this.getItem(this.selected)?.lastModifiedTime || -1;\r\n    }\r\n\r\n    get tags(): Array<string>\r\n    {\r\n        return this.getItem(this.selected)?.tags || [];\r\n    }\r\n\r\n    setName(newName: string): ValidationMessage\r\n    {\r\n        let item = this.getItem(this.selected);\r\n\r\n        if(item)\r\n        {\r\n            let old = item.clone();\r\n            let msg = item.setName(newName);\r\n\r\n            let change = new Change(\r\n                ChangeAction.SET_NAME,\r\n                { oldValue: old, newValue: item.clone() }\r\n            );\r\n            this.changes.push(change);\r\n            this.changeEvent(change);\r\n            return msg;\r\n        }\r\n\r\n        return ValidationMessage.ITEM_NOT_SELECTED;\r\n    }\r\n\r\n    setDesc(newDesc: string): ValidationMessage\r\n    {\r\n        let item = this.getItem(this.selected);\r\n\r\n        if(item)\r\n        {\r\n            let old = item.clone();\r\n            let msg = item.setDesc(newDesc);\r\n\r\n            let change = new Change(\r\n                ChangeAction.SET_DESC,\r\n                { oldValue: old, newValue: item.clone() }\r\n            );\r\n            this.changes.push(change);\r\n            this.changeEvent(change);\r\n            return msg;\r\n        }\r\n\r\n        return ValidationMessage.ITEM_NOT_SELECTED;\r\n    }\r\n\r\n    setState(newState: boolean): ValidationMessage\r\n    {\r\n        let item = this.getItem(this.selected);\r\n\r\n        if(item)\r\n        {\r\n            let old = item.clone();\r\n            let msg = item.setState(newState);\r\n\r\n            let change = new Change(\r\n                ChangeAction.SET_STATE,\r\n                { oldValue: old, newValue: item.clone() }\r\n            );\r\n            this.changes.push(change);\r\n            this.changeEvent(change);\r\n            return msg;\r\n        }\r\n\r\n        return ValidationMessage.ITEM_NOT_SELECTED;\r\n    }\r\n\r\n    addTag(newTag: string): ValidationMessage\r\n    {\r\n        let item = this.getItem(this.selected);\r\n\r\n        if(item)\r\n        {\r\n            let old = item.clone();\r\n            let msg = item.addTag(newTag);\r\n\r\n            let change = new Change(\r\n                ChangeAction.ADD_TAG,\r\n                { oldValue: old, newValue: item.clone() }\r\n            );\r\n            this.changes.push( change );\r\n            this.changeEvent( change );\r\n            return msg;\r\n        }\r\n\r\n        return ValidationMessage.ITEM_NOT_SELECTED;\r\n    }\r\n\r\n    removeTag(tag: string): ValidationMessage\r\n    {\r\n        let item = this.getItem(this.selected);\r\n\r\n        if(item)\r\n        {\r\n            let old = item.clone();\r\n            let msg = item.removeTag(tag);\r\n\r\n            let change = new Change(\r\n                ChangeAction.REMOVE_TAG,\r\n                { oldValue: old, newValue: item.clone() }\r\n            );\r\n            this.changes.push( change );\r\n            this.changeEvent( change );\r\n            return msg;\r\n        }\r\n\r\n        return ValidationMessage.ITEM_NOT_SELECTED;\r\n    }\r\n\r\n\r\n    // === Events ===\r\n    changeEvent(change?: Change)\r\n    {\r\n        this.setSearchParams();\r\n        this.dispatchEvent(\r\n            new CustomEvent<{change?: Change}>('itemChange', { detail: { change } })\r\n        );\r\n    }\r\n\r\n    searchEvent()\r\n    {\r\n        this.dispatchEvent(\r\n            new CustomEvent('itemSearch')\r\n        );\r\n    }\r\n\r\n    selectEvent(item?: Item)\r\n    {\r\n        this.dispatchEvent(\r\n            new CustomEvent<{item?: Item}>('itemSelect', { detail: { item } })\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ItemCollection;\r\n","import Settings from './Settings';\r\nimport ItemCollection from './ItemCollection';\r\n\r\nimport { TodoDataJson } from './Todo';\r\n\r\nclass TodoStorage extends EventTarget\r\n{\r\n    settings: Settings = new Settings();\r\n    itemCollection: ItemCollection = new ItemCollection();\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n\r\n        this.load();\r\n\r\n        this.itemCollection.addEventListener(\r\n            'itemChange', () => { this.save() });\r\n        this.settings.addEventListener(\r\n            'themeChange', () => { this.save() });\r\n    }\r\n\r\n    load()\r\n    {\r\n\r\n        let localObject: TodoDataJson | undefined\r\n        let localObjectString = localStorage['todoData'] as string | undefined;\r\n        if(localObjectString)\r\n            localObject = JSON.parse(localObjectString) as TodoDataJson;\r\n        this.settings = Settings.fromJson(localObject?.settings);\r\n        this.itemCollection = ItemCollection.fromJson(localObject?.itemCollection);\r\n        \r\n        if(!localObject || !(localObject?.itemCollection) || !(localObject?.settings))\r\n            this.save();\r\n        \r\n        this.loadEvent();\r\n    }\r\n\r\n    save()\r\n    {\r\n        localStorage['todoData'] = JSON.stringify({\r\n            settings: this.settings.toJson(),\r\n            itemCollection: this.itemCollection.toJson()\r\n        } as TodoDataJson);\r\n\r\n        this.saveEvent();\r\n    }\r\n\r\n    wipe()\r\n    {\r\n        localStorage.removeItem('todoData');\r\n\r\n        this.load();\r\n        this.wipeEvent();\r\n    }\r\n\r\n    loadEvent()\r\n    {\r\n        this.dispatchEvent(\r\n            new Event('load')\r\n        );\r\n    }\r\n\r\n    saveEvent()\r\n    {\r\n        this.dispatchEvent(\r\n            new Event('save')\r\n        );\r\n    }\r\n\r\n    wipeEvent()\r\n    {\r\n        this.dispatchEvent(\r\n            new Event('wipe')\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoStorage;","\r\nimport React from 'react';\r\nimport TodoStorage from '../Model/Storage';\r\n\r\nconst TodoContext = React.createContext(new TodoStorage());\r\n\r\nexport default TodoContext;\r\n","import { useCallback, useContext, useEffect, useState, useRef } from 'react';\r\nimport TodoContext from '../TodoContext';\r\nimport { SortOrder, Theme } from '../../Model/Todo';\r\n\r\nimport './SearchBar.css';\r\n\r\nfunction SearchBar()\r\n{\r\n    const {itemCollection, settings} = useContext(TodoContext);\r\n\r\n    const searchSvgLogoPath = useCallback((theme: Theme) => { \r\n        return `./Assets/search-logo-${theme.toString()}.svg`; \r\n    }, []);\r\n    const [searchSvgLogo, setSearchSvgLogo] = useState(searchSvgLogoPath(settings.theme));\r\n    const updateTheme = useCallback(() => {\r\n        setSearchSvgLogo(searchSvgLogoPath(settings.theme))\r\n    }, [searchSvgLogoPath, settings]);\r\n\r\n    const searchRef = useRef<HTMLInputElement>(null);\r\n    const orderRef = useRef<HTMLSelectElement>(null);\r\n    const search = useCallback(() => {\r\n        if(searchRef.current && orderRef.current)\r\n        {\r\n            itemCollection.setSearchParams(\r\n                searchRef.current.value ?? \"\",\r\n                orderRef.current.value as SortOrder ?? SortOrder.ASC_DATE_ADDED);\r\n            console.log(searchRef.current.value);\r\n        }\r\n    },[itemCollection, searchRef]);\r\n    \r\n    const undoChange = useCallback(() => {\r\n        itemCollection.undo();\r\n    }, [itemCollection]);\r\n\r\n    const redoChange = useCallback(() => {\r\n        itemCollection.redo();\r\n    }, [itemCollection]);\r\n\r\n    useEffect(() => {\r\n        settings.addEventListener('themeChange', updateTheme);\r\n        return () => {\r\n            settings.removeEventListener('themeChange', updateTheme);\r\n        }\r\n    }, [settings, updateTheme]);\r\n\r\n    return (\r\n        <div className=\"SearchBar\">\r\n            <div className=\"SearchBar-bar\">\r\n                <button \r\n                    className=\"SearchBar-searchButton\"\r\n                    onClick={search}>\r\n                    <img src={searchSvgLogo} alt=\"search\"></img>\r\n                </button>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"SearchBar-searchInput\"\r\n                    ref={searchRef}></input>\r\n            </div>\r\n            <div className=\"SearchBar-options\">\r\n                <div className=\"SearchBar-SortOptions\">\r\n                    <label htmlFor=\"sortOrderOption\">Order: </label>\r\n                    <select id=\"sortOrderOption\" ref={orderRef}>\r\n                        <option value={SortOrder.ASC_DATE_ADDED}>Created Asc</option>\r\n                        <option value={SortOrder.DSC_DATE_ADDED}>Created Dsc</option>\r\n                        <option value={SortOrder.ASC_NAME}>Name Asc</option>\r\n                        <option value={SortOrder.DSC_NAME}>Name Dsc</option>\r\n                        <option value={SortOrder.ASC_DATE_MODIFIED}>Modified Asc</option>\r\n                        <option value={SortOrder.DSC_DATE_MODIFIED}>Modified Dsc</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"SearchBar-undoRedoControls\">\r\n                    <button className=\"SearchBar-undoRedoButton\" onClick={undoChange}>\r\n                        undo\r\n                    </button>\r\n                    <button className=\"SearchBar-undoRedoButton\" onClick={redoChange}>\r\n                        redo\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;\r\n","import { useCallback, useContext, useEffect, useState, useRef } from 'react';\r\nimport TodoContext from '../TodoContext';\r\nimport { Theme } from '../../Model/Todo';\r\n\r\nimport './Item.css';\r\n\r\ninterface ItemProps\r\n{\r\n    ID: number,\r\n    name: string,\r\n    desc: string,\r\n    tags: string[],\r\n    state: boolean,\r\n}\r\n\r\nenum EditMode\r\n{\r\n    NONE,\r\n    TITLE,\r\n    DESC,\r\n    TAGS\r\n}\r\n\r\nfunction Item(props: ItemProps)\r\n{\r\n    const {itemCollection, settings} = useContext(TodoContext);\r\n    const [expand, setExpand] = useState(itemCollection.selected === props.ID);\r\n    const [editMode, setEditMode] = useState(EditMode.NONE);\r\n\r\n    const editSvgLogoPath = useCallback((theme: Theme) => { \r\n        return `./Assets/pencil-logo-${theme.toString()}.svg`; \r\n    }, []);\r\n    const [editSvgLogo, setEditSvgLogo] = useState(editSvgLogoPath(settings.theme));\r\n    const updateTheme = useCallback(() => {\r\n        setEditSvgLogo(editSvgLogoPath(settings.theme))\r\n    }, [editSvgLogoPath, settings]);\r\n\r\n    const tagsRef = useRef<HTMLInputElement>(null);\r\n    const nameRef = useRef<HTMLInputElement>(null);\r\n    const descRef = useRef<HTMLInputElement>(null);\r\n\r\n    const setName = useCallback(() => {\r\n        if(itemCollection.selected === props.ID && editMode === EditMode.TITLE && nameRef.current)\r\n            itemCollection.setName(nameRef.current.value);\r\n        setEditMode(EditMode.NONE);\r\n    }, [itemCollection, props.ID, editMode, nameRef]);\r\n\r\n    const setDesc = useCallback(() => {\r\n        if(itemCollection.selected === props.ID && editMode === EditMode.DESC && descRef.current)\r\n            itemCollection.setDesc(descRef.current.value);\r\n        setEditMode(EditMode.NONE);\r\n    }, [itemCollection, props.ID, editMode, descRef]);\r\n\r\n    const addTag = useCallback(() => {\r\n        if(itemCollection.selected === props.ID && editMode === EditMode.TAGS && tagsRef.current)\r\n        {\r\n            itemCollection.addTag(tagsRef.current.value);\r\n            tagsRef.current.value = \"\"\r\n        }\r\n        console.log(\"add Tag\");\r\n    }, [itemCollection, props.ID, editMode, tagsRef]);\r\n\r\n    const removeTag = useCallback((oldTag: string) => {\r\n        if(itemCollection.selected === props.ID && editMode === EditMode.TAGS)\r\n            itemCollection.removeTag(oldTag);\r\n    }, [itemCollection, props.ID, editMode]);\r\n\r\n    const deleteThis = useCallback(() => {\r\n        if(itemCollection.selected === props.ID)\r\n            itemCollection.removeItem();\r\n    }, [itemCollection, props.ID]);\r\n\r\n    const selectResponse = useCallback(() => {\r\n        setExpand(itemCollection.selected === props.ID);\r\n    }, [itemCollection, props.ID]);\r\n\r\n    const toggleThisState = useCallback((ev: any) => {\r\n        if(itemCollection.selected === props.ID)\r\n            itemCollection.setState(!props.state);\r\n        ev.stopPropagation();\r\n    }, [itemCollection, props.ID, props.state]);\r\n\r\n    const toggleThisSelect = useCallback(() => {\r\n        if(itemCollection.selected === props.ID)\r\n            itemCollection.selectItem(-1);\r\n        else\r\n            itemCollection.selectItem(props.ID);\r\n    }, [itemCollection, props.ID]);\r\n\r\n    const stopPropigation = useCallback((ev: any) => {\r\n        ev.stopPropagation();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        itemCollection.addEventListener('itemSelect', selectResponse);\r\n        settings.addEventListener('themeChange', updateTheme);\r\n        let tagRefc = tagsRef.current;\r\n        let nameRefc = nameRef.current;\r\n        let descRefc = descRef.current;\r\n        \r\n        if(tagRefc) tagRefc.onchange = addTag;\r\n        if(nameRefc) nameRefc.onchange = setName;\r\n        if(descRefc) descRefc.onchange = setDesc;\r\n        return () => { \r\n            itemCollection.removeEventListener('itemSelect', selectResponse);\r\n            settings.removeEventListener('themeChange', updateTheme);\r\n        }\r\n    }, [itemCollection, settings, selectResponse, tagsRef, nameRef, descRef, addTag, setName, setDesc, updateTheme]);\r\n\r\n    return (\r\n        <div className={\"Item\" + ( expand ? \" Item-select\" : \"\" )}>\r\n            <div className=\"Item-bar\" onClick={toggleThisSelect}>\r\n                <div className=\"Item-nameContainer\">\r\n                    { (() => { if(editMode === EditMode.TITLE && expand) {\r\n                        return (<input \r\n                            className=\"Item-tagInput\" \r\n                            onClick={ stopPropigation }\r\n                            ref={ nameRef } \r\n                            type=\"text\"\r\n                            defaultValue={props.name}></input>);\r\n                    }else{\r\n                        return (\r\n                            <h3 className=\"Item-name\">{ props.name }</h3>);\r\n                    }})() }\r\n                    <div \r\n                        className={\"Item-editTag\" + ( expand ? \"\" : \" Item-hidden\" )} \r\n                        onClick={(ev: any) => { \r\n                            setEditMode(\r\n                                editMode === EditMode.TITLE ? EditMode.NONE : EditMode.TITLE);\r\n                            ev.stopPropagation(); \r\n                        }}><img src={editSvgLogo} alt=\"edit\"/></div>\r\n                </div>\r\n                <div \r\n                    className={\r\n                        \"Item-state\"\r\n                        + ( props.state ? \" Item-complete\" : \" Item-incomplete\")}\r\n                    onClick={toggleThisState}></div>\r\n            </div>\r\n            <div className={\"Item-expand\" + ( expand ? \"\" : \" Item-hidden\" )}>\r\n                <div className=\"Item-descContainer\">\r\n                    { (() => { if(editMode === EditMode.DESC) {\r\n                        return (<input \r\n                            className=\"Item-tagInput\" \r\n                            ref={ descRef } \r\n                            type=\"text\"\r\n                            defaultValue={props.desc}></input>);\r\n                    }else{\r\n                        return (\r\n                            <p className=\"Item-desc\">{ props.desc }</p>\r\n                            );\r\n                    }})() }\r\n                    <div \r\n                        className=\"Item-editTag\" \r\n                        onClick={() => { \r\n                            setEditMode(\r\n                                editMode === EditMode.DESC ? EditMode.NONE : EditMode.DESC) \r\n                }}><img src={editSvgLogo} alt=\"edit\"/></div>\r\n               </div>\r\n                <div className=\"Item-tags\">\r\n                    {\r\n                        props.tags.map((tag, i) => {\r\n                            return (\r\n                                <div className=\"Item-tag\" key={i}>\r\n                                    { tag }\r\n                                    { (() => { if(editMode === EditMode.TAGS) {\r\n                                        return (<div \r\n                                            className=\"ItemForm-tag-del\" \r\n                                            onClick={() => { \r\n                                                removeTag(tag);\r\n                                            }}>x</div>);\r\n                                    }})() }\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                    <div \r\n                        className=\"Item-editTag\" \r\n                        onClick={() => { \r\n                            setEditMode(\r\n                                editMode === EditMode.TAGS ? EditMode.NONE : EditMode.TAGS) \r\n                        }}><img src={editSvgLogo} alt=\"edit\"/></div>\r\n                </div>\r\n                { (() => { if(editMode === EditMode.TAGS) {\r\n                    return (<input \r\n                        className=\"Item-tagInput\" \r\n                        ref={ tagsRef } \r\n                        type=\"text\"></input>);\r\n                }})() }\r\n                <div className=\"Item-options\">\r\n                    <button className=\"Item-options-del\" onClick={deleteThis}>\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item;\r\n","import Item from './Item';\r\nimport ItemModel from '../../Model/Item';\r\nimport TodoContext from '../TodoContext';\r\n\r\nimport { useCallback, useContext, useEffect, useState } from 'react';\r\n\r\nimport './ItemList.css';\r\n\r\nfunction ItemList()\r\n{\r\n    const { itemCollection } = useContext(TodoContext);\r\n    const [items, setItems] = useState(itemCollection.getSearchItems());\r\n\r\n    const updateItems = useCallback(() => {\r\n        setItems(itemCollection.getSearchItems());\r\n    }, [setItems, itemCollection]);\r\n\r\n    useEffect(() => {\r\n        itemCollection.addEventListener('itemSearch', updateItems);\r\n        return () => { itemCollection.removeEventListener('itemSearch', updateItems); }\r\n    }, [itemCollection, updateItems]);\r\n\r\n    return (\r\n        <div className=\"ItemList\">\r\n            {\r\n                items.map((item: ItemModel) => {\r\n                    return <Item \r\n                        key={item.ID}\r\n                        ID={item.ID}\r\n                        name={item.name}\r\n                        desc={item.description}\r\n                        tags={item.tags}\r\n                        state={item.completed} />;\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemList;\r\n","import SearchBar from './SearchBar';\r\nimport ItemList from './ItemList';\r\n\r\nimport './ItemViewer.css';\r\n\r\nfunction ItemViewer()\r\n{\r\n    return (\r\n        <div className=\"ItemViewer\">\r\n            <SearchBar />\r\n            <ItemList />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemViewer;\r\n","import { useCallback, useContext, useEffect, useRef, useState } from 'react';\r\nimport TodoContext from '../TodoContext';\r\nimport './ItemForm.css';\r\n\r\nfunction ItemForm()\r\n{\r\n    const nameRef = useRef<HTMLInputElement>(null);\r\n    const descRef = useRef<HTMLTextAreaElement>(null);\r\n    const tagsRef = useRef<HTMLInputElement>(null);\r\n\r\n    const [tags, setTags] = useState<string[]>([]);\r\n\r\n    const TodoStorage = useContext(TodoContext);\r\n\r\n    const addTag = useCallback(() => {\r\n        if(tagsRef.current)\r\n        {\r\n            tags.push(tagsRef.current.value);\r\n            setTags(tags.map((e) => e));\r\n            tagsRef.current.value = '';\r\n        }\r\n    }, [tagsRef, tags]);\r\n\r\n    const removeTag = useCallback((index: number) => {\r\n        tags.splice(index, 1);\r\n        setTags(tags.map((e) => e));\r\n    }, [tags]);\r\n\r\n    const submitItem = useCallback(() => {\r\n        if(nameRef.current && descRef.current && tagsRef.current)\r\n        {\r\n            let msg = TodoStorage.itemCollection.createItem(\r\n                nameRef.current.value, descRef.current.value, tags.map((e) => e)\r\n            );\r\n            console.log(msg);\r\n\r\n            setTags([]);\r\n            tagsRef.current.value = '';\r\n            descRef.current.value = '';\r\n            nameRef.current.value = '';\r\n        }\r\n    }, [nameRef, descRef, tagsRef, TodoStorage, tags]);\r\n\r\n    useEffect(() => {\r\n        if(tagsRef.current)\r\n            tagsRef.current.onchange = addTag;\r\n    }, [tagsRef, addTag]);\r\n\r\n    return (\r\n        <div className=\"ItemForm\">\r\n            <h2 className=\"ItemForm-Heading\">Create Item</h2>\r\n            <label htmlFor=\"ItemForm-nameInput\">\r\n                Name: \r\n            </label>\r\n            <input id=\"ItemForm-nameInput\" className=\"ItemForm-nameInput\" ref={nameRef} type=\"text\"></input>\r\n            <label htmlFor=\"ItemForm-descInput\">\r\n                Description: \r\n            </label>\r\n            <textarea id=\"ItemForm-descInput\" className=\"ItemForm-descInput\" ref={descRef}></textarea>\r\n            <label htmlFor=\"ItemForm-tagInput\">\r\n                Tags: \r\n            </label>\r\n            <div className={ \"ItemForm-tags\" + (tags.length > 0) ? \"\" : \"ItemForm-display-none\" }>\r\n                {\r\n                    tags.map((tag, i) => {\r\n                        return (\r\n                            <div className=\"ItemForm-tag\" key={i}>\r\n                                { tag }\r\n                                <div \r\n                                    className=\"ItemForm-tag-del\" \r\n                                    onClick={() => { \r\n                                        removeTag(i);\r\n                                    }}>x</div>\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n            <input\r\n                id=\"ItemForm-tagInput\" \r\n                className=\"ItemForm-tagInput\" \r\n                ref={tagsRef} \r\n                type=\"text\"></input>\r\n            <button \r\n                className=\"ItemForm-submitInput\" \r\n                onClick={() => { submitItem(); }}> Add Item </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemForm;\r\n","import { useState, useCallback, useContext, useEffect } from 'react';\r\nimport TodoContext from '../TodoContext';\r\nimport { Theme } from '../../Model/Todo';\r\n\r\nimport './Settings.css';\r\n\r\nfunction Settings()\r\n{\r\n    const storage = useContext(TodoContext);\r\n    const { settings } = storage;\r\n\r\n    const [showMenu, setShowMenu] = useState(false);\r\n\r\n    const cogSvgLogoPath = useCallback((theme: Theme) => { \r\n        return `./Assets/cog-logo-${theme.toString()}.svg`; \r\n    }, []);\r\n\r\n    const [cogSvgLogo, setCogSvgLogo] = useState(cogSvgLogoPath(settings.theme));\r\n\r\n    const updateTheme = useCallback(() => {\r\n        setCogSvgLogo(cogSvgLogoPath(settings.theme))\r\n    }, [cogSvgLogoPath, settings]);\r\n\r\n    const toggleMenu = useCallback(() => {\r\n        setShowMenu(!showMenu);\r\n    }, [showMenu]);\r\n\r\n    const toggleTheme = useCallback(() => {\r\n        if(settings.theme === Theme.DARK)\r\n            settings.setTheme(Theme.LIGHT);\r\n        else if(settings.theme === Theme.LIGHT)\r\n            settings.setTheme(Theme.DARK);\r\n    }, [settings]);\r\n\r\n    const wipeData = useCallback(() => {\r\n        if(showMenu)\r\n            storage.wipe();\r\n    }, [showMenu, storage]);\r\n\r\n    useEffect(() => {\r\n        settings.addEventListener('themeChange', updateTheme);\r\n        return (() => {\r\n            settings.removeEventListener('themeChange', updateTheme);\r\n        })\r\n    }, [settings, updateTheme]);\r\n\r\n    return (\r\n        <div className=\"Settings\">\r\n            <div className=\"Settings-button\" onClick={toggleMenu}>\r\n                <img src={cogSvgLogo} alt=\"cog\"></img>\r\n            </div>\r\n            <div className={\"Settings-menu\" + ( showMenu ? \"\" : \" Settings-hidden\" )}>\r\n                <button className=\"Settings-themeButton\" onClick={toggleTheme}>Theme</button>\r\n                <button className=\"Settings-wipe\" onClick={wipeData}>Wipe Data</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;\r\n","import { useState, useCallback, useContext, useEffect } from 'react';\r\nimport TodoContext from '../TodoContext';\r\nimport { Theme } from '../../Model/Todo';\r\nimport Settings from './Settings';\r\n\r\nimport './Header.css';\r\n\r\nfunction Header()\r\n{\r\n    const { settings } = useContext(TodoContext);\r\n\r\n    const notesSvgLogoPath = useCallback((theme: Theme) => { \r\n        return `./Assets/sticky-notes-logo-${theme.toString()}.svg`; \r\n    }, []);\r\n\r\n    const [notesSvgLogo, setNotesSvgLogo] = useState(notesSvgLogoPath(settings.theme));\r\n    \r\n    const updateTheme = useCallback(() => {\r\n        setNotesSvgLogo(notesSvgLogoPath(settings.theme))\r\n    }, [notesSvgLogoPath, settings]);\r\n    \r\n    useEffect(() => {\r\n        settings.addEventListener('themeChange', updateTheme);\r\n        return (() => {\r\n            settings.removeEventListener('themeChange', updateTheme);\r\n        })\r\n    }, [settings, updateTheme]);\r\n\r\n    return (\r\n        <header className=\"Header\">\r\n            <div className=\"Header-Title\">\r\n                <img src={notesSvgLogo} alt=\"sticky note\"></img>\r\n                <h1>Todo List</h1>\r\n            </div>\r\n            <Settings />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","\nimport ItemViewer from './ItemViewer/ItemViewer';\nimport ItemForm from './ItemForm/ItemForm';\nimport Header from './Header/Header';\n\nimport './App.css';\nimport { useCallback, useContext, useEffect, useState } from 'react';\nimport TodoContext from './TodoContext';\n\nfunction App() {\n\n  const { settings } = useContext(TodoContext);\n  const [theme, setTheme] = useState(settings.theme);\n\n  const updateTheme = useCallback(() => {\n    setTheme(settings.theme);\n  }, [settings, setTheme]);\n\n  useEffect(() => {\n    settings.addEventListener('themeChange', updateTheme);\n    return (() => {\n      settings.removeEventListener('themeChange', updateTheme);\n    })\n  }, [settings, updateTheme]);\n\n  return (\n    <div className={\"App theme-\" + theme}>\n        <Header />\n        <ItemViewer />\n        <ItemForm />\n    </div>\n  );\n}\n\nexport default App;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport App from './Components/App';\n\nimport './index.css';\n\nimport TodoContext from './Components/TodoContext';\nimport TodoStorage from './Model/Storage';\n\nconst todoStore = new TodoStorage();\n\ntodoStore.addEventListener('wipe', () => { window.location.reload(); })\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoContext.Provider value={ todoStore }>\n      <App />\n    </TodoContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}